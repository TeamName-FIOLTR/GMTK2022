[gd_resource type="ShaderMaterial" load_steps=11 format=2]

[ext_resource path="res://assets/textures/Dice Numbers.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 0.116

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=4]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=5]

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.0546875, 0.117708, 1, 1 )

[sub_resource type="VisualShaderNodeScalarInterp" id=8]

[sub_resource type="VisualShaderNodeScalarConstant" id=9]

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = 1.0

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Color:6
	vec3 n_out6p0 = vec3(0.054688, 0.117708, 1.000000);
	float n_out6p1 = 1.000000;

// Color:4
	vec3 n_out4p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out4p1 = 1.000000;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// VectorScalarMix:5
	vec3 n_out5p0 = mix(n_out6p0, n_out4p0, dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// Scalar:10
	float n_out10p0 = 0.116000;

// Scalar:8
	float n_out8p0 = 0.000000;

// Scalar:9
	float n_out9p0 = 1.000000;

// Output:0
	ALBEDO = n_out5p0;
	METALLIC = n_out10p0;
	ROUGHNESS = n_out8p0;
	SPECULAR = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -73, 87 )
nodes/fragment/0/position = Vector2( 700, 200 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -160, 200 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 60, 320 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 300, 200 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 120, 140 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 240, 380 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 360, 300 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 420, 420 )
nodes/fragment/10/node = SubResource( 7 )
nodes/fragment/10/position = Vector2( 340, 380 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 2, 4, 0, 5, 1, 6, 0, 5, 0, 5, 0, 0, 0, 3, 0, 7, 2, 8, 0, 0, 3, 9, 0, 0, 4, 10, 0, 0, 2 )

[resource]
shader = SubResource( 3 )
